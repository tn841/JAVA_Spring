2016-12-07 15:35:45,903 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@368102c8: startup date [Wed Dec 07 15:35:45 KST 2016]; root of context hierarchy
2016-12-07 15:35:45,935 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill7/aop/basic/7-1.aop.xml]
2016-12-07 15:35:46,128 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27c20538: defining beans [userDao,userService,emailSendTargetBean,beforeLogAdvice,profilingAroundAdvice,loggingAfterAdvice,loggingAfterReturningAdvice,emailSendAfterThrowingAdvice,org.springframework.aop.config.internalAutoProxyCreator,afterReturningPointcut,org.springframework.aop.aspectj.AspectJPointcutAdvisor#0,org.springframework.aop.aspectj.AspectJPointcutAdvisor#1,org.springframework.aop.aspectj.AspectJPointcutAdvisor#2,org.springframework.aop.aspectj.AspectJPointcutAdvisor#3,org.springframework.aop.aspectj.AspectJPointcutAdvisor#4,loggingBeforePointcut]; root of factory hierarchy
2016-12-07 15:35:46,367 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userDao' with 0 common interceptors and 3 specific interceptors
2016-12-07 15:35:46,368 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserDaoImplJDBC@54c562f7]
2016-12-07 15:35:46,392 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userService' with 0 common interceptors and 4 specific interceptors
2016-12-07 15:35:46,393 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserServiceImpl@51e5fc98]
2016-12-07 15:35:46,398 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'emailSendTargetBean' with 0 common interceptors and 2 specific interceptors
2016-12-07 15:35:46,409 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:155)     - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean@433d61fb]
2016-12-07 15:35:46,445 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public void com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean.exceptionThrowMethod()
2016-12-07 15:35:46,446 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:759)     - Found finalize() method - using NO_OVERRIDE
2016-12-07 15:35:46,446 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:771)     - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2016-12-07 15:35:46,447 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2016-12-07 15:35:46,447 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:776)     - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2016-12-07 15:35:46,447 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2016-12-07 15:35:46,447 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2016-12-07 15:35:46,448 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2016-12-07 15:35:46,449 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,450 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,451 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-07 15:35:46,452 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2016-12-07 16:34:11,775 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@41975e01: startup date [Wed Dec 07 16:34:11 KST 2016]; root of context hierarchy
2016-12-07 16:34:11,812 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill7/aop/basic/7-1.aop.xml]
2016-12-07 16:34:11,947 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6e1567f1: defining beans [userDao,userService,emailSendTargetBean,beforeLogAdvice,profilingAroundAdvice,loggingAfterAdvice,loggingAfterReturningAdvice,emailSendAfterThrowingAdvice,org.springframework.aop.config.internalAutoProxyCreator,afterReturningPointcut,org.springframework.aop.aspectj.AspectJPointcutAdvisor#0,org.springframework.aop.aspectj.AspectJPointcutAdvisor#1,org.springframework.aop.aspectj.AspectJPointcutAdvisor#2,org.springframework.aop.aspectj.AspectJPointcutAdvisor#3,org.springframework.aop.aspectj.AspectJPointcutAdvisor#4,loggingBeforePointcut]; root of factory hierarchy
2016-12-07 16:34:12,101 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userDao' with 0 common interceptors and 3 specific interceptors
2016-12-07 16:34:12,102 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserDaoImplJDBC@43301423]
2016-12-07 16:34:12,117 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userService' with 0 common interceptors and 4 specific interceptors
2016-12-07 16:34:12,117 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserServiceImpl@1677d1]
2016-12-07 16:34:12,128 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'emailSendTargetBean' with 0 common interceptors and 2 specific interceptors
2016-12-07 16:34:12,131 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:155)     - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean@4ddced80]
2016-12-07 16:34:12,164 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public void com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean.exceptionThrowMethod()
2016-12-07 16:34:12,165 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:759)     - Found finalize() method - using NO_OVERRIDE
2016-12-07 16:34:12,165 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:771)     - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2016-12-07 16:34:12,165 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2016-12-07 16:34:12,165 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:776)     - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2016-12-07 16:34:12,166 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2016-12-07 16:34:12,166 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2016-12-07 16:34:12,167 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2016-12-07 16:34:12,167 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2016-12-07 16:34:12,167 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2016-12-07 16:34:12,167 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2016-12-07 16:34:12,167 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,168 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2016-12-07 16:34:12,169 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2016-12-07 16:34:12,170 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2016-12-07 16:34:33,593 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@41975e01: startup date [Wed Dec 07 16:34:33 KST 2016]; root of context hierarchy
2016-12-07 16:34:33,630 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.pring_dao.xml]
2016-12-07 16:34:49,591 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@41975e01: startup date [Wed Dec 07 16:34:49 KST 2016]; root of context hierarchy
2016-12-07 16:34:49,625 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-07 16:34:49,705 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51efea79: defining beans [apacheDataSource]; root of factory hierarchy
2016-12-07 16:37:13,717 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@41975e01: startup date [Wed Dec 07 16:37:13 KST 2016]; root of context hierarchy
2016-12-07 16:37:13,755 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-07 16:37:13,835 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51efea79: defining beans [apacheDataSource]; root of factory hierarchy
2016-12-07 16:37:44,715 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@41975e01: startup date [Wed Dec 07 16:37:44 KST 2016]; root of context hierarchy
2016-12-07 16:37:44,748 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-07 16:37:44,824 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51efea79: defining beans [apacheDataSource]; root of factory hierarchy
2016-12-07 17:09:34,668 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Wed Dec 07 17:09:34 KST 2016]; root of context hierarchy
2016-12-07 17:09:34,736 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-07 17:09:34,826 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4678c730: defining beans [apacheDataSource,springDataSource]; root of factory hierarchy
2016-12-07 17:09:34,936 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-07 17:09:35,456 DEBUG [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:162)     - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@210.16.214.203:1521:xe]
2016-12-07 17:09:47,086 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Wed Dec 07 17:09:47 KST 2016]; root of context hierarchy
2016-12-07 17:09:47,122 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-07 17:09:47,212 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4678c730: defining beans [apacheDataSource,springDataSource]; root of factory hierarchy
2016-12-07 17:09:47,321 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-07 17:09:47,800 DEBUG [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:162)     - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@210.16.214.203:1521:xe]
2016-12-07 17:31:36,890 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Wed Dec 07 17:31:36 KST 2016]; root of context hierarchy
2016-12-07 17:31:36,958 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-2.user_dao.xml]
2016-12-07 17:31:37,052 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,userDao]; root of factory hierarchy
2016-12-07 17:31:37,171 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-07 17:35:51,008 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Wed Dec 07 17:35:51 KST 2016]; root of context hierarchy
2016-12-07 17:35:51,043 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-2.user_dao.xml]
2016-12-07 17:35:51,124 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,userDao]; root of factory hierarchy
2016-12-07 17:35:51,233 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
