2016-12-08 10:32:44,728 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 10:32:44 KST 2016]; root of context hierarchy
2016-12-08 10:32:44,773 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-08 10:33:32,656 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 10:33:32 KST 2016]; root of context hierarchy
2016-12-08 10:33:32,689 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-08 10:33:32,775 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTempalte]; root of factory hierarchy
2016-12-08 10:33:32,917 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 10:33:33,981 DEBUG [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:162)     - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@210.16.214.203:1521:xe]
2016-12-08 10:33:51,291 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 10:33:51 KST 2016]; root of context hierarchy
2016-12-08 10:33:51,326 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-1.spring_dao.xml]
2016-12-08 10:33:51,419 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTempalte]; root of factory hierarchy
2016-12-08 10:33:51,521 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 10:33:51,934 DEBUG [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:162)     - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@210.16.214.203:1521:xe]
2016-12-08 11:18:41,344 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 11:18:41 KST 2016]; root of context hierarchy
2016-12-08 11:18:41,380 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 11:18:58,658 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 11:18:58 KST 2016]; root of context hierarchy
2016-12-08 11:18:58,695 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 11:18:58,783 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 11:18:58,899 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 11:19:19,823 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 11:19:19 KST 2016]; root of context hierarchy
2016-12-08 11:19:19,858 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 11:19:19,947 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 11:19:20,055 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 11:20:41,812 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 11:20:41 KST 2016]; root of context hierarchy
2016-12-08 11:20:41,848 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 11:20:41,934 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 11:20:42,045 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 11:21:24,758 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 11:21:24 KST 2016]; root of context hierarchy
2016-12-08 11:21:24,793 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 11:21:24,884 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 11:21:24,998 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 12:22:09,897 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 12:22:09 KST 2016]; root of context hierarchy
2016-12-08 12:22:09,932 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 12:22:10,022 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 12:22:10,129 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 12:22:10,148 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 12:22:10,149 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [insert into userinfo valuse(?, ?, ?, ?)]
2016-12-08 12:22:10,186 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 12:22:10,651 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 12:22:10,657 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2016-12-08 12:22:10,684 INFO  [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:126)     - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2016-12-08 12:22:10,684 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:199)     - Looking up default SQLErrorCodes for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@dbd8e44]
2016-12-08 12:22:10,685 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 12:22:10,688 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 12:22:10,689 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:217)     - Database product name cached for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@dbd8e44]: name is 'Oracle'
2016-12-08 12:22:10,689 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:175)     - SQL error codes for 'Oracle' found
2016-12-08 12:22:10,689 DEBUG [main] support.SQLErrorCodeSQLExceptionTranslator (SQLErrorCodeSQLExceptionTranslator.java:287)     - Unable to translate SQLException with Error code '928', will now try the fallback translator
2016-12-08 12:23:28,543 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 12:23:28 KST 2016]; root of context hierarchy
2016-12-08 12:23:28,577 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 12:23:28,692 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 12:23:28,818 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 12:23:28,837 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 12:23:28,840 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 12:23:29,272 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:07:11,919 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:07:11 KST 2016]; root of context hierarchy
2016-12-08 14:07:11,951 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:07:12,032 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:07:12,131 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:07:12,148 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:07:12,152 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:07:12,555 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:07:12,557 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:07:12,557 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:07:12,557 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:07:12,605 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:08:06,440 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:08:06 KST 2016]; root of context hierarchy
2016-12-08 14:08:06,472 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:08:06,554 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:08:06,653 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:08:06,670 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:08:06,673 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:08:07,078 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:08:07,080 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:08:07,080 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:08:07,080 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:08:07,104 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:09:08,940 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:09:08 KST 2016]; root of context hierarchy
2016-12-08 14:09:08,972 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:09:09,051 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:09:09,144 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:09:09,162 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:09:09,165 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:09:09,566 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:09:09,567 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:09:09,568 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:09:09,568 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:09:09,592 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:09:09,593 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:09:09,593 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:09:09,596 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:05,225 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:14:05 KST 2016]; root of context hierarchy
2016-12-08 14:14:05,257 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:14:05,338 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:14:05,432 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:14:05,448 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:14:05,452 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:05,862 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:05,863 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:14:05,863 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:14:05,864 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:05,888 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:05,889 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:14:05,889 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:05,892 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:16,050 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:14:16 KST 2016]; root of context hierarchy
2016-12-08 14:14:16,082 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:14:16,163 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:14:16,259 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:14:16,276 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:14:16,279 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:16,686 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:16,687 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:14:16,688 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:14:16,688 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:16,712 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:14:16,713 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:14:16,713 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:14:16,716 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:26,025 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:15:26 KST 2016]; root of context hierarchy
2016-12-08 14:15:26,057 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:15:26,137 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:15:26,232 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:15:26,251 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:15:26,251 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:15:26,254 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:26,675 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:34,900 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:15:34 KST 2016]; root of context hierarchy
2016-12-08 14:15:34,933 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:15:35,016 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:15:35,113 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:15:35,133 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:15:35,134 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:15:35,137 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:35,555 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 14:15:35,555 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 14:15:35,555 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 14:15:35,556 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 14:15:35,556 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:35,558 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:15:35,559 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:35,563 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:35,563 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:15:35,564 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:15:35,564 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:35,568 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:35,568 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:15:35,568 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:35,571 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:53,699 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:15:53 KST 2016]; root of context hierarchy
2016-12-08 14:15:53,731 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:15:53,813 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:15:53,911 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:15:53,930 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:15:53,931 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:15:53,934 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:54,363 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 14:15:54,363 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 14:15:54,364 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 14:15:54,364 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 14:15:54,365 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:54,366 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:15:54,367 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:15:54,367 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:54,371 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:15:54,372 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:15:54,372 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:15:54,376 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:27:58,084 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7dc5e7b4: startup date [Thu Dec 08 14:27:58 KST 2016]; root of context hierarchy
2016-12-08 14:27:58,121 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:27:58,213 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29ee9faa: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:27:58,328 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:27:58,351 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:27:58,352 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:27:58,355 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:27:58,807 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 14:27:58,807 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 14:27:58,807 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 14:27:58,808 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 14:27:58,808 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:27:58,811 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:27:58,812 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:27:58,812 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:27:58,815 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:27:58,818 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:27:58,818 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:27:58,822 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:58:46,013 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 14:58:46 KST 2016]; root of context hierarchy
2016-12-08 14:58:46,047 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:58:46,133 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6767c1fc: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:58:46,246 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:58:46,274 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:58:46,275 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:58:46,278 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:58:46,738 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 14:58:46,739 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 14:58:46,739 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 14:58:46,739 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 14:58:46,740 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:58:46,741 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 14:58:46,742 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 14:58:46,742 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:58:46,745 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:58:46,746 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 14:58:46,747 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:58:46,750 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:59:20,069 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 14:59:20 KST 2016]; root of context hierarchy
2016-12-08 14:59:20,103 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbctemplate.xml]
2016-12-08 14:59:33,901 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 14:59:33 KST 2016]; root of context hierarchy
2016-12-08 14:59:33,937 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 14:59:34,027 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6767c1fc: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:59:34,136 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 14:59:34,155 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 14:59:34,155 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [insert into userinfo valuse(?, ?, ?, ?)]
2016-12-08 14:59:34,159 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:59:34,605 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:59:34,611 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2016-12-08 14:59:34,640 INFO  [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:126)     - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2016-12-08 14:59:34,640 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:199)     - Looking up default SQLErrorCodes for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@79179359]
2016-12-08 14:59:34,640 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:59:34,644 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:59:34,644 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:217)     - Database product name cached for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@79179359]: name is 'Oracle'
2016-12-08 14:59:34,645 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:175)     - SQL error codes for 'Oracle' found
2016-12-08 14:59:34,645 DEBUG [main] support.SQLErrorCodeSQLExceptionTranslator (SQLErrorCodeSQLExceptionTranslator.java:287)     - Unable to translate SQLException with Error code '928', will now try the fallback translator
2016-12-08 14:59:58,154 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 14:59:58 KST 2016]; root of context hierarchy
2016-12-08 14:59:58,189 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbctemplate.xml]
2016-12-08 14:59:58,274 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58651fd0: defining beans [apacheDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 14:59:58,395 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 14:59:58,395 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [insert into userinfo valuse(?, ?, ?, ?)]
2016-12-08 14:59:58,399 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:59:58,845 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:59:58,850 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2016-12-08 14:59:58,880 INFO  [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:126)     - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2016-12-08 14:59:58,880 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:199)     - Looking up default SQLErrorCodes for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@53fd0d10]
2016-12-08 14:59:58,880 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 14:59:58,884 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 14:59:58,884 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:217)     - Database product name cached for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@53fd0d10]: name is 'Oracle'
2016-12-08 14:59:58,885 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:175)     - SQL error codes for 'Oracle' found
2016-12-08 14:59:58,885 DEBUG [main] support.SQLErrorCodeSQLExceptionTranslator (SQLErrorCodeSQLExceptionTranslator.java:287)     - Unable to translate SQLException with Error code '928', will now try the fallback translator
2016-12-08 15:01:21,837 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:01:21 KST 2016]; root of context hierarchy
2016-12-08 15:01:21,871 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbc.xml]
2016-12-08 15:01:21,954 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6767c1fc: defining beans [apacheDataSource,springDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 15:01:22,061 INFO  [main] datasource.DriverManagerDataSource (DriverManagerDataSource.java:153)     - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
2016-12-08 15:01:22,087 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 15:01:22,087 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 15:01:22,090 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:22,546 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 15:01:22,546 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 15:01:22,546 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 15:01:22,546 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 15:01:22,547 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:22,549 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 15:01:22,549 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 15:01:22,549 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:22,553 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:22,554 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 15:01:22,554 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:22,558 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:26,699 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:01:26 KST 2016]; root of context hierarchy
2016-12-08 15:01:26,736 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbctemplate.xml]
2016-12-08 15:01:26,825 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58651fd0: defining beans [apacheDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 15:01:26,947 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 15:01:26,947 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [insert into userinfo values(?,?,?,?)]
2016-12-08 15:01:26,951 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:27,385 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:826)     - SQL update affected 1 rows
2016-12-08 15:01:27,387 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:27,388 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 15:01:27,388 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [insert into userinfo values(?,?,?,?)]
2016-12-08 15:01:27,388 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:27,395 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:27,400 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2016-12-08 15:01:27,426 INFO  [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:126)     - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2016-12-08 15:01:27,427 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:199)     - Looking up default SQLErrorCodes for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@5dcb4f5f]
2016-12-08 15:01:27,427 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:27,431 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:27,431 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:217)     - Database product name cached for DataSource [org.apache.tomcat.dbcp.dbcp2.BasicDataSource@5dcb4f5f]: name is 'Oracle'
2016-12-08 15:01:27,431 DEBUG [main] support.SQLErrorCodesFactory (SQLErrorCodesFactory.java:175)     - SQL error codes for 'Oracle' found
2016-12-08 15:01:27,432 DEBUG [main] support.SQLErrorCodeSQLExceptionTranslator (SQLErrorCodeSQLExceptionTranslator.java:403)     - Translating SQLException with SQL state '23000', error code '1', message [ORA-00001: unique constraint (USER0.SYS_C0032982) violated
]; SQL was [insert into userinfo values(?,?,?,?)] for task [PreparedStatementCallback]
2016-12-08 15:01:48,897 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:01:48 KST 2016]; root of context hierarchy
2016-12-08 15:01:48,930 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill8/dao/8-3.user_dao_jdbctemplate.xml]
2016-12-08 15:01:49,009 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58651fd0: defining beans [apacheDataSource,jdbcTemplate,userDao]; root of factory hierarchy
2016-12-08 15:01:49,135 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 15:01:49,136 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 15:01:49,138 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,590 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 15:01:49,590 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 15:01:49,590 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 15:01:49,590 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 15:01:49,591 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:49,593 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 15:01:49,594 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [update userinfo set password=?,name=?,email=? where userid=?]
2016-12-08 15:01:49,595 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,598 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:826)     - SQL update affected 0 rows
2016-12-08 15:01:49,598 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:49,600 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:817)     - Executing prepared SQL update
2016-12-08 15:01:49,600 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [delete from userinfo where userid=?]
2016-12-08 15:01:49,600 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,604 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:826)     - SQL update affected 1 rows
2016-12-08 15:01:49,604 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:49,604 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 15:01:49,605 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,608 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'USERID' to property 'userId' of type class java.lang.String
2016-12-08 15:01:49,609 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'PASSWORD' to property 'password' of type class java.lang.String
2016-12-08 15:01:49,609 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'NAME' to property 'name' of type class java.lang.String
2016-12-08 15:01:49,609 DEBUG [main] core.BeanPropertyRowMapper (BeanPropertyRowMapper.java:250)     - Mapping column 'EMAIL' to property 'email' of type class java.lang.String
2016-12-08 15:01:49,625 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:49,626 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:637)     - Executing prepared SQL query
2016-12-08 15:01:49,626 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:572)     - Executing prepared SQL statement [select userid,password,name,email from userinfo where userid=?]
2016-12-08 15:01:49,626 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,630 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:01:49,630 DEBUG [main] core.JdbcTemplate (JdbcTemplate.java:435)     - Executing SQL query [select userid,password,name,email from userinfo]
2016-12-08 15:01:49,630 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:110)     - Fetching JDBC Connection from DataSource
2016-12-08 15:01:49,640 DEBUG [main] datasource.DataSourceUtils (DataSourceUtils.java:327)     - Returning JDBC Connection to DataSource
2016-12-08 15:11:36,322 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:11:36 KST 2016]; root of context hierarchy
2016-12-08 15:11:36,356 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user.xml]
2016-12-08 15:11:36,439 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58651fd0: defining beans [apacheDataSource,jdbcTemplate,userDao,userService]; root of factory hierarchy
2016-12-08 15:23:28,653 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:23:28 KST 2016]; root of context hierarchy
2016-12-08 15:23:28,686 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user.xml]
2016-12-08 15:23:28,769 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58651fd0: defining beans [apacheDataSource,jdbcTemplate,userDao,userService]; root of factory hierarchy
2016-12-08 15:24:41,867 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:24:41 KST 2016]; root of context hierarchy
2016-12-08 15:24:41,902 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:24:41,970 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:24:57,624 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:24:57 KST 2016]; root of context hierarchy
2016-12-08 15:24:57,657 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:24:57,725 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:46,294 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:46 KST 2016]; root of context hierarchy
2016-12-08 15:30:46,330 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:46,398 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:48,115 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:48 KST 2016]; root of context hierarchy
2016-12-08 15:30:48,149 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:48,217 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:48,739 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:48 KST 2016]; root of context hierarchy
2016-12-08 15:30:48,780 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:48,862 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:49,450 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:49 KST 2016]; root of context hierarchy
2016-12-08 15:30:49,453 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:49 KST 2016]; root of context hierarchy
2016-12-08 15:30:49,502 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:49,505 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:49,582 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:49,595 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:50,520 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:50 KST 2016]; root of context hierarchy
2016-12-08 15:30:50,527 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:30:50 KST 2016]; root of context hierarchy
2016-12-08 15:30:50,577 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:50,578 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:30:50,702 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:30:50,704 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5f375618: defining beans []; root of factory hierarchy
2016-12-08 15:43:30,190 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:43:30 KST 2016]; root of context hierarchy
2016-12-08 15:43:30,226 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:43:30,431 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@731a74c: defining beans [userDao,userDaoOther,springUserDao,userServiceImplAnnotation,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2016-12-08 15:43:30,450 INFO  [main] support.DefaultListableBeanFactory (DefaultSingletonBeanRegistry.java:444)     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@731a74c: defining beans [userDao,userDaoOther,springUserDao,userServiceImplAnnotation,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2016-12-08 15:44:47,978 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:44:47 KST 2016]; root of context hierarchy
2016-12-08 15:44:48,013 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:44:48,171 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@731a74c: defining beans [userDao,userDaoOther,springUserDao,userServiceImplAnnotation,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2016-12-08 15:44:48,192 INFO  [main] support.DefaultListableBeanFactory (DefaultSingletonBeanRegistry.java:444)     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@731a74c: defining beans [userDao,userDaoOther,springUserDao,userServiceImplAnnotation,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2016-12-08 15:47:32,996 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 15:47:32 KST 2016]; root of context hierarchy
2016-12-08 15:47:33,032 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [99.user_annotation.xml]
2016-12-08 15:47:33,203 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65e2dbf3: defining beans [userDao,userDaoOther,springUserDao,userServiceImplAnnotation,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,apacheDataSource,jdbcTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2016-12-08 16:31:06,676 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 16:31:06 KST 2016]; root of context hierarchy
2016-12-08 16:31:06,710 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill9/properties/9.spring_properties.xml]
2016-12-08 16:31:06,847 INFO  [main] support.PropertySourcesPlaceholderConfigurer (PropertiesLoaderSupport.java:172)     - Loading properties file from class path resource [com/itwill9/properties/jdbc.properties]
2016-12-08 16:31:06,854 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41eaa2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,apacheDataSource]; root of factory hierarchy
2016-12-08 16:33:22,996 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 16:33:22 KST 2016]; root of context hierarchy
2016-12-08 16:33:23,031 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill9/properties/9.spring_properties.xml]
2016-12-08 16:33:23,152 INFO  [main] support.PropertySourcesPlaceholderConfigurer (PropertiesLoaderSupport.java:172)     - Loading properties file from class path resource [com/itwill9/properties/jdbc.properties]
2016-12-08 16:33:23,158 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41eaa2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,apacheDataSource]; root of factory hierarchy
2016-12-08 16:33:37,347 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 16:33:37 KST 2016]; root of context hierarchy
2016-12-08 16:33:37,382 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill9/properties/9.spring_properties.xml]
2016-12-08 16:33:37,501 INFO  [main] support.PropertySourcesPlaceholderConfigurer (PropertiesLoaderSupport.java:172)     - Loading properties file from class path resource [com/itwill9/properties/jdbc.properties]
2016-12-08 16:33:37,507 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41eaa2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,apacheDataSource]; root of factory hierarchy
2016-12-08 16:34:01,372 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 16:34:01 KST 2016]; root of context hierarchy
2016-12-08 16:34:01,409 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill9/properties/9.spring_properties.xml]
2016-12-08 16:34:01,535 INFO  [main] support.PropertySourcesPlaceholderConfigurer (PropertiesLoaderSupport.java:172)     - Loading properties file from class path resource [com/itwill9/properties/jdbc.properties]
2016-12-08 16:34:01,542 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41eaa2: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,apacheDataSource]; root of factory hierarchy
2016-12-08 16:52:15,080 INFO  [main] support.ClassPathXmlApplicationContext (AbstractApplicationContext.java:510)     - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Thu Dec 08 16:52:15 KST 2016]; root of context hierarchy
2016-12-08 16:52:15,112 INFO  [main] xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315)     - Loading XML bean definitions from class path resource [com/itwill7/aop/basic/7-1.aop.xml]
2016-12-08 16:52:15,272 INFO  [main] support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:596)     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5702b3b1: defining beans [userDao,userService,emailSendTargetBean,beforeLogAdvice,profilingAroundAdvice,loggingAfterAdvice,loggingAfterReturningAdvice,emailSendAfterThrowingAdvice,org.springframework.aop.config.internalAutoProxyCreator,afterReturningPointcut,org.springframework.aop.aspectj.AspectJPointcutAdvisor#0,org.springframework.aop.aspectj.AspectJPointcutAdvisor#1,org.springframework.aop.aspectj.AspectJPointcutAdvisor#2,org.springframework.aop.aspectj.AspectJPointcutAdvisor#3,org.springframework.aop.aspectj.AspectJPointcutAdvisor#4,loggingBeforePointcut]; root of factory hierarchy
2016-12-08 16:52:15,509 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userDao' with 0 common interceptors and 3 specific interceptors
2016-12-08 16:52:15,510 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserDaoImplJDBC@769e7ee8]
2016-12-08 16:52:15,528 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'userService' with 0 common interceptors and 4 specific interceptors
2016-12-08 16:52:15,528 DEBUG [main] framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115)     - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.itwill.user.UserServiceImpl@2b6faea6]
2016-12-08 16:52:15,533 DEBUG [main] autoproxy.AspectJAwareAdvisorAutoProxyCreator (AbstractAutoProxyCreator.java:538)     - Creating implicit proxy for bean 'emailSendTargetBean' with 0 common interceptors and 2 specific interceptors
2016-12-08 16:52:15,537 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:155)     - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean@3c22fc4c]
2016-12-08 16:52:15,574 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public void com.itwill7.aop.basic.EmailSendAfterThrowingTargetBean.exceptionThrowMethod()
2016-12-08 16:52:15,575 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:759)     - Found finalize() method - using NO_OVERRIDE
2016-12-08 16:52:15,575 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:771)     - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2016-12-08 16:52:15,575 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2016-12-08 16:52:15,575 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:776)     - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2016-12-08 16:52:15,576 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:808)     - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2016-12-08 16:52:15,576 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,577 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2016-12-08 16:52:15,578 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2016-12-08 16:52:15,578 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2016-12-08 16:52:15,578 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2016-12-08 16:52:15,578 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2016-12-08 16:52:15,579 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2016-12-08 16:52:15,580 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2016-12-08 16:52:15,580 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2016-12-08 16:52:15,580 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2016-12-08 16:52:15,580 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2016-12-08 16:52:15,580 DEBUG [main] framework.CglibAopProxy (CglibAopProxy.java:765)     - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2016-12-08 16:55:24,684 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:55:24,686 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:55:24,686 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:55:24,686 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 16:56:22,045 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:56:22,047 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:56:22,047 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:56:22,047 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 16:56:55,005 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:56:55,007 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:56:55,007 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:56:55,007 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 16:57:43,694 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:57:43,696 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:57:43,696 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:57:43,696 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 16:58:24,232 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:10)     - start:김소라
2016-12-08 16:58:24,234 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:11)     - start:김소라
2016-12-08 16:58:24,235 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:58:24,235 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:58:24,235 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:18)     - end:김소라
2016-12-08 16:58:24,235 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:19)     - end:김소라
2016-12-08 16:58:24,236 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:58:24,237 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 16:58:37,709 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:9)     - start:김소라
2016-12-08 16:58:37,711 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:10)     - start:김소라
2016-12-08 16:58:37,711 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:11)     - start:김소라
2016-12-08 16:58:37,711 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 16:58:37,712 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 16:58:37,712 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:17)     - end:김소라
2016-12-08 16:58:37,713 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:18)     - end:김소라
2016-12-08 16:58:37,713 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:19)     - end:김소라
2016-12-08 16:58:37,713 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 16:58:37,713 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 17:03:37,258 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:9)     - start:김소라
2016-12-08 17:03:37,260 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:10)     - start:김소라
2016-12-08 17:03:37,260 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:11)     - start:김소라
2016-12-08 17:03:37,261 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 17:03:37,261 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 17:03:37,261 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:17)     - end:김소라
2016-12-08 17:03:37,262 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:18)     - end:김소라
2016-12-08 17:03:37,262 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:19)     - end:김소라
2016-12-08 17:03:37,262 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 17:03:37,262 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
2016-12-08 17:03:48,892 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:9)     - start:김소라
2016-12-08 17:03:48,895 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:10)     - start:김소라
2016-12-08 17:03:48,895 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:11)     - start:김소라
2016-12-08 17:03:48,895 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:12)     - start:김소라
2016-12-08 17:03:48,895 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:13)     - start:김소라
2016-12-08 17:03:48,895 DEBUG [main] log.HelloWorldLog4J (HelloWorldLog4J.java:17)     - end:김소라
2016-12-08 17:03:48,896 INFO  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:18)     - end:김소라
2016-12-08 17:03:48,897 WARN  [main] log.HelloWorldLog4J (HelloWorldLog4J.java:19)     - end:김소라
2016-12-08 17:03:48,897 ERROR [main] log.HelloWorldLog4J (HelloWorldLog4J.java:20)     - end:김소라
2016-12-08 17:03:48,897 FATAL [main] log.HelloWorldLog4J (HelloWorldLog4J.java:21)     - end:김소라
